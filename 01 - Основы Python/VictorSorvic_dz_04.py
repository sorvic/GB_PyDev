"""
Проверить, установлен ли пакет pillow в глобальном окружении.
Если да — зафиксировать версию. Установить самую свежую версию pillow,
если ранее она не была установлена. Сделать подтверждающий скриншот.
Создать и активировать виртуальное окружение. Убедиться, что в нем нет пакета pillow.
Сделать подтверждающий скриншот.
Установить в виртуальное окружение pillow версии 7.1.1 (или другой, отличной от самой свежей).
Сделать подтверждающий скриншот. Деактивировать виртуальное окружение.
Сделать подтверждающий скриншот. Скрины нумеровать двухразрядными числами,
например: «01.jpg», «02.jpg». Если будут проблемы с pillow - можно поработать
с другим пакетом: например, requests.
"""
# в папке '01 - Основы Python\screen'
# 01_setup_last_pillow.png
# 02_pillow_8-3.png
# 03_new_virt_no_pillow.png
# 04_new_virt_pillow_8-1.png

"""
Написать функцию currency_rates(), принимающую в качестве аргумента код валюты
(например, USD, EUR, GBP, ...) и возвращающую курс этой валюты по отношению к рублю.
Использовать библиотеку requests.
В качестве API можно использовать http://www.cbr.ru/scripts/XML_daily.asp.
Рекомендация: выполнить предварительно запрос к API в обычном браузере,
посмотреть содержимое ответа. Можно ли, используя только методы класса str,
решить поставленную задачу? Функция должна возвращать результат числового типа,
например float. Подумайте: есть ли смысл для работы с денежными величинами использовать
вместо float тип Decimal? Сильно ли усложняется код функции при этом?
Если в качестве аргумента передали код валюты, которого нет в ответе, вернуть None.
Можно ли сделать работу функции не зависящей от того, в каком регистре был передан аргумент?
В качестве примера выведите курсы доллара и евро.

*(вместо 2) Доработать функцию currency_rates(): теперь она должна возвращать кроме курса дату,
которая передаётся в ответе сервера. Дата должна быть в виде объекта date.
Подумайте, как извлечь дату из ответа, какой тип данных лучше использовать в ответе функции?
"""
print('\nЗадание №2-3')

import requests
from datetime import datetime
from decimal import *  # библиотекадля работы с финансами

# указываем кол-во знаков после запятой
getcontext().prec = 4

def currency_market(currency):
    response = requests.get('http://www.cbr.ru/scripts/XML_daily.asp').text
    if currency in response:
        rub = response[response.find('<Value>', response.find(currency)) + 7:response.find('</Value>', response.find(currency))]
        # response[response.find('Date="') - находим начало вхождения + 6 символов
        # response.find('"', response.find('Date="') + 6) - находим кавычки
        # после уже найденного вхождения (2-ой аргумент во втором find())
        date = response[response.find('Date="') + 6:response.find('"', response.find('Date="') + 6)]
        # переворачиваем дату строкой для библиотеки datetime
        date_new = list(reversed(date.split('.')))
        # соединяем в вил 2021-110-05
        date_new = '-'.join(date_new)
        # преобразуем валюту с разделителем "точка", чтобы можно было пременить метод Decimal
        rub_new = rub.replace(',', '.')
        # преобразуем в дату с помощью библиотеки datetime
        return f"Курс {currency} валюты на {datetime.strptime(date_new, '%Y-%m-%d')} = {Decimal(rub_new)}"
    else:
        return None

print(currency_market('USD'))
print(currency_market('EUR'))
print(currency_market('RUB'))


"""
Написать свой модуль utils и перенести в него функцию currency_rates() из предыдущего задания.
Создать скрипт, в котором импортировать этот модуль и выполнить несколько вызовов функции currency_rates().
Убедиться, что ничего лишнего не происходит.
"""
print('\nЗадание №4')

import VictorSorvic_dz_04_utils as utils

print(utils.currency_market('USD'))
print(utils.currency_market('EUR'))
print(utils.currency_market('RUB'))


"""
*(вместо 4) Доработать скрипт из предыдущего задания: теперь он должен работать и из консоли. Например:
> python task_4_5.py USD
75.18, 2020-09-05
"""
print('\nЗадание №5 - в коммандной строке запускаем >>> python3 VictorSorvic_dz_04_utils.py EUR')
